package Demo;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Random;

/**
 * Created by Friends on 12-09-2016.
 */
public class Demo implements MouseListener {
    public static int cnt = 0, cnt2 = 0, cnt3 = 0, cnt4 = 0, cnt5 = 0, cnt6 = 0, cnt7 = 0, cnt8 = 0, cnt9 = 0;
    public int i, z;
    public static int cntt = 0;
    public static int a = 1, b = 1, c = 1, d = 1, e = 1, f = 1, g = 1, h = 1, j = 1;
    public static int fill[] = {0, 0, 0, 0, 0, 0, 0, 0, 0};
    public static int filled[] = {0, 0, 0, 0, 0, 0, 0, 0, 0};
    public static Graphics graphics;
    public Random random = new Random();
    public static int aa = 1, bb = 1, cc = 1, dd = 1, ee = 1, ff = 1, gg = 1, hh = 1;
    public static int a1=1,b1=1,c1=1,d1=1,e1=1,f1=1,g1=1,h1=1,j1=1,k1=1,l1=1,m1=1,o1=1,p1=1,q1=1,r1=1;
    public static int a2=1,b2=1,c2=1,d2=1,e2=1,f2=1,g2=1,h2=1;
    public static int a3=1,b3=1,c3=1,d3=1,e3=1,f3=1,g3=1,h3=1,j3=1,k3=1,l3=1,m3=1,o3=1,p3=1,q3=1,r3=1;

    public int check5()
    { int gap,flagg;
        if(fill[0]==1&&filled[4]==1)
        {
            if(fill[5]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 0 || gap == 4 ||gap==5)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[2]=1;cntt++;return 1;}
            }

            if(fill[7]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 0 || gap == 4 ||gap==7)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[6]=1;cntt++;return 1;}
            }
            if(fill[8]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 0 || gap == 4||gap==8)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[1]=1;cntt++;return 1;}}
        }

        if(fill[2]==1&&filled[4]==1)
        {
            if(fill[3]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 2 || gap == 4||gap==3)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[0]=1;cntt++;return 1;}
            }

            if(fill[7]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 2 || gap == 4||gap==7)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[8]=1;cntt++;return 1;}
            }
            if(fill[6]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 2 || gap == 4||gap==6)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[1]=1;cntt++;return 1;}}
        }

        if(fill[6]==1&&filled[4]==1)
        {
            if(fill[1]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 6 || gap == 4||gap==1)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[0]=1;cntt++;return 1;}
            }

            if(fill[2]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 6 || gap == 4||gap==2)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[7]=1;cntt++;return 1;}
            }
            if(fill[5]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 6 || gap == 4||gap==5)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[8]=1;cntt++;return 1;}}
        }

        if(fill[8]==1&&filled[4]==1)
        {
            if(fill[1]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 8 || gap == 4||gap==1)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[2]=1;cntt++;return 1;}
            }

            if(fill[0]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 8 || gap == 4||gap==0)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[7]=1;cntt++;return 1;}
            }
            if(fill[3]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 8 || gap == 4||gap==3)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[6]=1;cntt++;return 1;}}
        }


        if(fill[1]==1&&filled[4]==1)
        {
            if(fill[3]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 1 || gap == 4||gap==3)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[6]=1;cntt++;return 1;}
            }

            if(fill[5]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 1 || gap == 4||gap==5)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[8]=1;cntt++;return 1;}
            }
            if(fill[6]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 1 || gap == 4||gap==6)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[0]=1;cntt++;return 1;}}

            if(fill[7]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 1 || gap == 4||gap==7)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[8]=1;cntt++;return 1;}}

            if(fill[8]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 1 || gap == 4||gap==8)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[2]=1;cntt++;return 1;}}


        }

        if(fill[3]==1&&filled[4]==1)
        {
            if(fill[1]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 3 || gap == 4||gap==1)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[6]=1;cntt++;return 1;}
            }

            if(fill[7]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 3 || gap == 4||gap==7)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[8]=1;cntt++;return 1;}
            }
            if(fill[2]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 3 || gap == 4||gap==2)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[0]=1;cntt++;return 1;}}

            if(fill[5]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 3 || gap == 4||gap==5)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[2]=1;cntt++;return 1;}}

            if(fill[8]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 3 || gap == 4||gap==8)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[6]=1;cntt++;return 1;}}


        }

        if(fill[7]==1&&filled[4]==1)
        {
            if(fill[3]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 7 || gap == 4||gap==3)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[8]=1;cntt++;return 1;}
            }

            if(fill[5]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 5 || gap == 4||gap==7)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[2]=1;cntt++;return 1;}
            }
            if(fill[0]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 7 || gap == 4||gap==0)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[6]=1;cntt++;return 1;}}

            if(fill[1]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 7 || gap == 4||gap==1)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[0]=1;cntt++;return 1;}}

            if(fill[2]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 7 || gap == 4||gap==2)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[8]=1;cntt++;return 1;}}


        }


        if(fill[5]==1&&filled[4]==1)
        {
            if(fill[1]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 5 || gap == 4||gap==1)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0){ filled[0]=1;cntt++;return 1;}
            }

            if(fill[7]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 5 || gap == 4||gap==7)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                } if(flagg==0) { filled[2]=1;cntt++;return 1;}
            }
            if(fill[0]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 5 || gap == 4||gap==0)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[3]=1;cntt++;return 1;}}

            if(fill[3]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 5 || gap == 4||gap==3)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[6]=1;cntt++;return 1;}}

            if(fill[6]==1) {flagg=0;
                for (gap = 0; gap < 8; gap++) {
                    if (gap == 5 || gap == 4||gap==6)
                        continue;
                    else if (fill[gap] == 0 && filled[gap] == 0)
                        continue;
                    else {
                        flagg = 1;
                        break;
                    }
                }  if(flagg==0) {filled[8]=1;cntt++;return 1;}}


        }




        return 0;
    }

    public int check4()
    {
        if(filled[0]==1&&filled[1]==1&&fill[2]==0&&filled[2]==0) {
            if (a3 == 1) {
                cntt++;
                filled[2] = 1;
                a3 = 0;
                return 1;
            }
        }
        if(filled[1]==1&&filled[2]==1&&fill[0]==0&&filled[0]==0) {
            if (b3 == 1) {
                cntt++;
                filled[0] = 1;
                b3= 0;
                return 1;
            }
        }
        if(filled[3]==1&&filled[4]==1&&fill[5]==0&&filled[5]==0) {
            if (c3 == 1) {
                cntt++;
                filled[5] = 1;
                c3 = 0;
                return 1;
            }
        }
        if(filled[4]==1&&filled[5]==1&&fill[3]==0&&filled[3]==0) {
            if (d3 == 1) {
                cntt++;
                filled[3] = 1;
                d3 = 0;
                return 1;
            }
        }
        if(filled[6]==1&&filled[7]==1&&fill[8]==0&&filled[8]==0) {
            if (e3 == 1) {
                cntt++;
                filled[8] = 1;
                e3 = 0;
                return 1;
            }
        }
        if(filled[7]==1&&filled[8]==1&&fill[6]==0&&filled[6]==0) {
            if (f3 == 1) {
                cntt++;
                filled[6] = 1;
                f3 = 0;
                return 1;
            }
        }
        if(filled[0]==1&&filled[3]==1&&fill[6]==0&&filled[6]==0) {
            if (g3 == 1) {
                cntt++;
                filled[6] = 1;
                g3 = 0;
                return 1;
            }
        }
        if(filled[3]==1&&filled[6]==1&&fill[0]==0&&filled[0]==0) {
            if (h3 == 1) {
                cntt++;
                filled[0] = 1;
                h3 = 0;
                return 1;
            }
        }
        if(filled[1]==1&&filled[4]==1&&fill[7]==0&&filled[7]==0) {
            if (j3 == 1) {
                cntt++;
                filled[7] = 1;
                j3 = 0;
                return 1;
            }
        }
        if(filled[4]==1&&filled[7]==1&&fill[1]==0&&filled[1]==0) {
            if (k3 == 1) {
                cntt++;
                filled[1] = 1;
                k3 = 0;
                return 1;
            }
        }
        if(filled[2]==1&&filled[5]==1&&fill[8]==0&&filled[8]==0) {
            if (l3 == 1) {
                cntt++;
                filled[8] = 1;
                l3 = 0;
                return 1;
            }
        }

        if(filled[5]==1&&filled[8]==1&&fill[2]==0&&filled[2]==0) {
            if (m3 == 1) {
                cntt++;
                filled[2] = 1;
                m3 = 0;
                return 1;
            }
        }

        if(filled[0]==1&&filled[4]==1&&fill[8]==0&&filled[8]==0) {
            if (o3 == 1) {
                cntt++;
                filled[8] = 1;
                o3 = 0;
                return 1;
            }
        }
        if(filled[4]==1&&filled[8]==1&&fill[0]==0&&filled[0]==0) {
            if (p3 == 1) {
                cntt++;
                filled[0] = 1;
                p3 = 0;
                return 1;
            }
        }
        if(filled[2]==1&&filled[4]==1&&fill[6]==0&&filled[6]==0) {
            if (q3 == 1) {
                cntt++;
                filled[6] = 1;
                q3 = 0;
                return 1;
            }
        }
        if(filled[4]==1&&filled[6]==1&&fill[2]==0&&filled[2]==0) {
            if (r3 == 1) {
                cntt++;
                filled[2] = 1;
                r3 = 0;
                return 1;
            }
        }


        return 0;
    }


    public int check3()
    {
        if(filled[0]==1&&filled[2]==1&&fill[1]==0&&filled[1]==0)
        {
            if(a2==1){
                cntt++;filled[1]=1;a2=0;
                return 1;}
        }
        if(filled[3]==1&&filled[5]==1&&fill[4]==0&&filled[4]==0)
        {
            if(b2==1){
                cntt++;filled[4]=1;b2=0;
                return 1;}
        }
        if(filled[6]==1&&filled[8]==1&&fill[7]==0&&filled[7]==0)
        {
            if(c2==1){
                cntt++;filled[7]=1;c2=0;
                return 1;}
        }
        if(filled[0]==1&&filled[6]==1&&fill[3]==0&&filled[3]==0)
        {
            if(d2==1){
                cntt++;filled[3]=1;d2=0;
                return 1;}
        }
        if(filled[1]==1&&filled[7]==1&&fill[4]==0&&filled[4]==0)
        {
            if(e2==1){
                cntt++;filled[4]=1;e2=0;
                return 1;}
        }
        if(filled[2]==1&&filled[8]==1&&fill[5]==0&&filled[5]==0)
        {
            if(f2==1){
                cntt++;filled[5]=1;f2=0;
                return 1;}
        }
        if(filled[0]==1&&filled[8]==1&&fill[4]==0&&filled[4]==0)
        {
            if(g2==1){
                cntt++;filled[4]=1;g2=0;
                return 1;}
        }
        if(filled[2]==1&&filled[6]==1&&fill[4]==0&&filled[4]==0)
        {
            if(h2==1){
                cntt++;filled[4]=1;h2=0;
                return 1;}
        }

        return 0;
    }

    public int check2()
    {   int x;int flag;
        if(fill[0]==1)
        {flag=0;
            for(x=1;x<=8;x++)
            {
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }
        }

        if(fill[2]==1)
        {flag=0;
            for(x=0;x<=8;x++)
            {
                if(x==2)
                    continue;
                else
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }
        }

        if(fill[6]==1)
        {flag=0;
            for(x=0;x<=8;x++)
            {
                if(x==6)
                    continue;
                else
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }
        }

        if(fill[8]==1)
        {flag=0;
            for(x=0;x<=8;x++)
            {
                if(x==8)
                    continue;
                else
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }
        }

        if(fill[1]==1)
        {flag=0;
            for(x=0;x<=8;x++)
            {
                if(x==1)
                    continue;
                else
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }}

        if(fill[3]==1)
        {flag=0;
            for(x=0;x<=8;x++)
            {
                if(x==3)
                    continue;
                else
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }}
        if(fill[5]==1)
        {flag=0;
            for(x=0;x<=8;x++)
            {
                if(x==5)
                    continue;
                else
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }}

        if(fill[7]==1)
        {flag=0;
            for(x=0;x<=8;x++)
            {
                if(x==7)
                    continue;
                else
                if(fill[x]==0&&filled[x]==0)
                    continue;
                else
                {
                    flag=1;
                    break;
                }
            }
            if(flag==1)
                return 0;
            else
            {
                filled[4]=1;cntt++;return 1;
            }}
        return 0;
    }

    public int check1()
    {
        if(fill[0]==1&&fill[1]==1&&fill[2]==0&&filled[2]==0) {
            if (a1 == 1) {
                cntt++;
                filled[2] = 1;
                a1 = 0;
                return 1;
            }
        }
        if(fill[1]==1&&fill[2]==1&&fill[0]==0&&filled[0]==0) {
            if (b1 == 1) {
                cntt++;
                filled[0] = 1;
                b1 = 0;
                return 1;
            }
        }
        if(fill[3]==1&&fill[4]==1&&fill[5]==0&&filled[5]==0) {
            if (c1 == 1) {
                cntt++;
                filled[5] = 1;
                c1 = 0;
                return 1;
            }
        }
        if(fill[4]==1&&fill[5]==1&&fill[3]==0&&filled[3]==0) {
            if (d1 == 1) {
                cntt++;
                filled[3] = 1;
                d1 = 0;
                return 1;
            }
        }
        if(fill[6]==1&&fill[7]==1&&fill[8]==0&&filled[8]==0) {
            if (e1 == 1) {
                cntt++;
                filled[8] = 1;
                e1 = 0;
                return 1;
            }
        }
        if(fill[7]==1&&fill[8]==1&&fill[6]==0&&filled[6]==0) {
            if (f1 == 1) {
                cntt++;
                filled[6] = 1;
                f1 = 0;
                return 1;
            }
        }
        if(fill[0]==1&&fill[3]==1&&fill[6]==0&&filled[6]==0) {
            if (g1 == 1) {
                cntt++;
                filled[6] = 1;
                g1 = 0;
                return 1;
            }
        }
        if(fill[3]==1&&fill[6]==1&&fill[0]==0&&filled[0]==0) {
            if (h1 == 1) {
                cntt++;
                filled[0] = 1;
                h1 = 0;
                return 1;
            }
        }
        if(fill[1]==1&&fill[4]==1&&fill[7]==0&&filled[7]==0) {
            if (j1 == 1) {
                cntt++;
                filled[7] = 1;
                j1 = 0;
                return 1;
            }
        }
        if(fill[4]==1&&fill[7]==1&&fill[1]==0&&filled[1]==0) {
            if (k1 == 1) {
                cntt++;
                filled[1] = 1;
                k1 = 0;
                return 1;
            }
        }
        if(fill[2]==1&&fill[5]==1&&fill[8]==0&&filled[8]==0) {
            if (l1 == 1) {
                cntt++;
                filled[8] = 1;
                l1 = 0;
                return 1;
            }
        }

        if(fill[5]==1&&fill[8]==1&&fill[2]==0&&filled[2]==0) {
            if (m1 == 1) {
                cntt++;
                filled[2] = 1;
                m1 = 0;
                return 1;
            }
        }

        if(fill[0]==1&&fill[4]==1&&fill[8]==0&&filled[8]==0) {
            if (o1 == 1) {
                cntt++;
                filled[8] = 1;
                o1 = 0;
                return 1;
            }
        }
        if(fill[4]==1&&fill[8]==1&&fill[0]==0&&filled[0]==0) {
            if (p1 == 1) {
                cntt++;
                filled[0] = 1;
                p1 = 0;
                return 1;
            }
        }
        if(fill[2]==1&&fill[4]==1&&fill[6]==0&&filled[6]==0) {
            if (q1 == 1) {
                cntt++;
                filled[6] = 1;
                q1 = 0;
                return 1;
            }
        }
        if(fill[4]==1&&fill[6]==1&&fill[2]==0&&filled[2]==0) {
            if (r1 == 1) {
                cntt++;
                filled[2] = 1;
                r1 = 0;
                return 1;
            }
        }






        return 0;

    }

    public int  check()
    {
        if(fill[0]==1&&fill[2]==1&&fill[1]==0&&filled[1]==0)
        {
            if(aa==1){
            cntt++;filled[1]=1;aa=0;
            return 1;}
        }
        if(fill[3]==1&&fill[5]==1&&fill[4]==0&&filled[4]==0)
        {
            if(bb==1){
            cntt++;filled[4]=1;bb=0;
            return 1;}
        }
        if(fill[6]==1&&fill[8]==1&&fill[7]==0&&filled[7]==0)
        {
            if(cc==1){
            cntt++;filled[7]=1;cc=0;
            return 1;}
        }
        if(fill[0]==1&&fill[6]==1&&fill[3]==0&&filled[3]==0)
        {
            if(dd==1){
            cntt++;filled[3]=1;dd=0;
            return 1;}
        }
        if(fill[1]==1&&fill[7]==1&&fill[4]==0&&filled[4]==0)
        {
            if(ee==1){
            cntt++;filled[4]=1;ee=0;
            return 1;}
        }
        if(fill[2]==1&&fill[8]==1&&fill[5]==0&&filled[5]==0)
        {
            if(ff==1){
            cntt++;filled[5]=1;ff=0;
            return 1;}
        }
        if(fill[0]==1&&fill[8]==1&&fill[4]==0&&filled[4]==0)
        {
            if(gg==1){
            cntt++;filled[4]=1;gg=0;
            return 1;}
        }
        if(fill[2]==1&&fill[6]==1&&fill[4]==0&&filled[4]==0)
        {
            if(hh==1){
            cntt++;filled[4]=1;hh=0;
            return 1;}
        }
        return 0;
    }

    public void generation() {
        for (z = 0; z < 9; z++) {
            if (cntt < 4) {
                i = random.nextInt(9);
                if (i == 0) {
                    if (fill[0] == 0 && filled[0] == 0) {
                        filled[0] = 1;
                        cntt++;
                        break;
                    } else
                        continue;
                }
                if (i == 1) {
                    if (fill[1] == 0 && filled[1] == 0) {
                        filled[1] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
                if (i == 2) {
                    if (fill[2] == 0 && filled[2] == 0) {
                        filled[2] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
                if (i == 3) {
                    if (fill[3] == 0 && filled[3] == 0) {
                        filled[3] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
                if (i == 4) {
                    if (fill[4] == 0 && filled[4] == 0) {
                        filled[4] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
                if (i == 5) {
                    if (fill[5] == 0 && filled[5] == 0) {
                        filled[5] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
                if (i == 6) {
                    if (fill[6] == 0 && filled[6] == 0) {
                        filled[6] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
                if (i == 7) {
                    if (fill[7] == 0 && filled[7] == 0) {
                        filled[7] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
                if (i == 8) {
                    if (fill[8] == 0 && filled[8] == 0) {
                        filled[8] = 1;
                        cntt++;
                        ;
                        break;
                    } else
                        continue;
                }
            }

        }
    }

    public static void main(String[] args) {


        JFrame frame = new JFrame();
        JPanel panel = new JPanel();
        panel.setPreferredSize(new Dimension(500, 500));
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.add(panel);
        frame.pack();
        panel.setFocusable(true);
        frame.setVisible(true);
        panel.requestFocus();
        Demo demo = new Demo();
        panel.addMouseListener(demo);
        int t,s,u,v,r,w;


        try {
            Thread.sleep(300);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        while (true) {
            try {
                Thread.sleep(30);
            } catch (InterruptedException e) {
            }
            graphics = panel.getGraphics();
            graphics.clearRect(0, 0, 500, 500);
            graphics.setColor(Color.LIGHT_GRAY);
            graphics.fillRect(0, 0, 500, 500);
            graphics.setColor(Color.BLUE);
            graphics.fillRect(200, 100, 10, 300);
            graphics.fillRect(310, 100, 10, 300);
            graphics.fillRect(100, 200, 300, 10);
            graphics.fillRect(100, 310, 300, 10);
            if (cnt == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(120, 120, 50, 50);
                fill[0] = 1;
                if (a == 1){
                    w=demo.check5();
                    if(w==0){
                    r=demo.check4();
                    if(r==0){
                    v=demo.check3();
                    if(v==0){
                    u=demo.check2();
                    if(u==0){
                    s=demo.check1();
                    if(s==0){
                t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                a = 2;
            }
            if (cnt2 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(230, 120, 50, 50);
                fill[1] = 1;
                if (b == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                b = 2;

            }
            if (cnt3 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(340, 120, 50, 50);
                fill[2] = 1;
                if (c == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                c = 2;

            }
            if (cnt4 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(120, 230, 50, 50);
                fill[3] = 1;

                if (d == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                d = 2;

            }
            if (cnt5 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(230, 230, 50, 50);
                fill[4] = 1;
                if (e == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                e = 2;

            }
            if (cnt6 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(340, 230, 50, 50);
                fill[5] = 1;
                if (f == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                f = 2;

            }
            if (cnt7 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(120, 340, 50, 50);
                fill[6] = 1;
                if (g == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                g = 2;

            }
            if (cnt8 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(230, 340, 50, 50);
                fill[7] = 1;
                if (h == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                h = 2;

            }
            if (cnt9 == 1) {
                graphics.setColor(Color.GREEN);
                graphics.fillOval(340, 340, 50, 50);
                fill[8] = 1;
                if (j == 1){
                    w=demo.check5();
                    if(w==0){

                        r=demo.check4();
                    if(r==0){

                        v=demo.check3();
                    if(v==0){

                        u=demo.check2();
                    if(u==0){

                        s=demo.check1();
                    if(s==0){

                        t=demo.check();
                if(t==0){
                    demo.generation();}}}}}}}
                j = 2;

            }


            if (filled[0] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(120, 120, 50, 50);
            }
            if (filled[1] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(230, 120, 50, 50);
            }
            if (filled[2] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(340, 120, 50, 50);
            }
            if (filled[3] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(120, 230, 50, 50);
            }
            if (filled[4] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(230, 230, 50, 50);
            }
            if (filled[5] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(340, 230, 50, 50);
            }
            if (filled[6] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(120, 340, 50, 50);
            }
            if (filled[7] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(230, 340, 50, 50);
            }
            if (filled[8] == 1) {
                graphics.setColor(Color.red);
                graphics.fillOval(340, 340, 50, 50);
            }
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getX() > 100 && e.getX() < 200 && e.getY() > 100 && e.getY() < 200) {
            cnt = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }
        }
        if (e.getX() > 210 && e.getX() < 310 && e.getY() > 100 && e.getY() < 200) {
            cnt2 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }
        if (e.getX() > 310 && e.getX() < 410 && e.getY() > 100 && e.getY() < 200) {
            cnt3 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }
        if (e.getX() > 100 && e.getX() < 200 && e.getY() > 210 && e.getY() < 310) {
            cnt4 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }
        if (e.getX() > 210 && e.getX() < 310 && e.getY() > 210 && e.getY() < 310) {
            cnt5 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }
        if (e.getX() > 320 && e.getX() < 420 && e.getY() > 210 && e.getY() < 310) {
            cnt6 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }
        if (e.getX() > 100 && e.getX() < 200 && e.getY() > 320 && e.getY() < 420) {
            cnt7 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }
        if (e.getX() > 210 && e.getX() < 310 && e.getY() > 320 && e.getY() < 420) {
            cnt8 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }
        if (e.getX() > 320 && e.getX() < 420 && e.getY() > 320 && e.getY() < 420) {
            cnt9 = 1;
            if(cntt==4)
            {
                a=2;b=2;c=2;d=2;Demo.e=2;f=2;g=2;h=2;j=2;
            }

        }

    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }
}
